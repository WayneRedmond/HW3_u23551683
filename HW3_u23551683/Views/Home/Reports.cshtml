@model HW3_u23551683.Models.ReportViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reports</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
</head>
<body>
    <div class="container mt-5">
        <h2 class="text-center">Book Count by Category</h2>
        <canvas id="categoryChart" width="400" height="200"></canvas>

        <h2 class="mt-4">Download Report:</h2>
        <form action="@Url.Action("ExportReport", "Home")" method="post" id="ExportForm">
            <div class="form-group">
                <input type="text" name="Filename" placeholder="Enter filename" required class="form-control" />
            </div>
            <div class="form-group">
                <label for="fileType">File Type:</label>
                <select class="form-control" id="fileType" name="fileType" required>
                    <option value="pdf">PDF</option>
                    <option value="png">PNG</option>
                </select>
            </div>
            <div class="form-group">
                <label for="description">Description:</label>
                <div id="quillEditor" style="height: 200px;"></div>
                <input type="hidden" name="Description" id="description" required />
            </div>
            <input type="hidden" id="chartImage" name="ChartImage" />
            <button class="btn btn-primary mb-2" type="button" id="downloadReport" onclick="ExportChart()">Download Report</button>
        </form>
    </div>

    <script>
        var quill = new Quill('#quillEditor', {
            theme: 'snow'
        });
        var ctx = document.getElementById('categoryChart').getContext('2d');
        var categoryNames = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CategoryReports.Select(x => x.CategoryName)));
        var bookCounts = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.CategoryReports.Select(x => x.BookCount)));

        // Function to generate random colors
        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }

        // Generate an array of random colors
        var colors = categoryNames.map(function() {
            return getRandomColor();
        });

        var categoryChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: categoryNames,
                datasets: [{
                    data: bookCounts,
                    backgroundColor: colors,
                    borderColor: 'rgba(0, 0, 0, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: false
                        }
                    },
                    x: {
                        title: {
                            display: false
                        }
                    }
                }
            }
        });

        function ExportChart() {
            alert('Preparing to download report...');
            var chartImage = categoryChart.toBase64Image();
            document.getElementById('chartImage').value = chartImage;
            document.getElementById('ExportForm').submit();
        }
    </script>
</body>
</html>
